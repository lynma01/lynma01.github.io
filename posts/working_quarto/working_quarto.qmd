---
title: "Working with Quarto Publishing"
format: html

draft: true
---

# Introduction {#sec-introduction}
I'd started today thinking I'd be writing a very different post. As I was sketching-out my idea, I quickly realized I wasn't familiar enough with [Quarto](https://quarto.org) to incorporate its best parts. Instead, I've made this post about my favorite parts of online writing, and how to implement them within Quarto.

## Why Use Quarto?
It's the best tool I can think of which:
    
1. Implements a notebook-style of "***Literate Programming***"[^literate_programming].
    
2. Allows me to easily post with all my favorite reading UI/UX features.  
    
3. It looks good, which, let's be honest, matters a great deal.  


# Putting the "Literate" in Literate Programming

## Creating Consistent Formatting across all your posts
This is where the `_quarto.yml` file comes into play. 

## Cross-References & Footnotes
This is a key portion of working across large bodies of text. Especially as different posts begin to reference other sections within the current post[^cross_references]. Most of all, footnotes are an often underrated tool for writers: while Infinite Jest is a great example of how footnotes can be fun, [Matt Levine, author of Bloomberg's Money Stuff](https://www.bloomberg.com/opinion/authors/ARbTQlRLRjE/matthew-s-levine) does a great job of showing how footnotes can be both helpful ***and*** fun.  


## Embeds (AKA: "[Includes](https://quarto.org/docs/authoring/includes.html)")
Depending on how it's implemented, re-using previous content is either a useful way to reinforce an idea, or a really fucking annoying way of maximizing an SEO ranking. In this case, we can easily re-use our previous writing by using Quarto's Includes:

```
---
title: "My Document"
---
{{< include _data.qmd >}}

# Use the data...
```
::: {.callout-important}
Note that we use an underscore (_) prefix for the included file. You should always use an underscore prefix with included files so that they are automatically ignored (i.e. not treated as standalone files) by a quarto render of a project.[^includes]
:::

## [Code Annotation](https://quarto.org/docs/authoring/code-annotation.html#annotation-syntax)


# Okay, that's cool, but let's run some code  

## Using Quarto's Widget System
I really like the look of the Perspective[^perspective] widget library within my notebooks. Perspective already has some examples for how to include their widgets within a notebook[^perspective_jupyter]. It's also got some really cool options for [plotting simulations in a browser](https://www.prospective.co/blog/market-simulation).  



[^literate_programming]: [Literate Programming](http://literateprogramming.com/)

[^perspective]: [Perspective - Interactive analytics and data visualization components](https://perspective.finos.org/)

[^perspective_jupyter]: [Perspective - Jupyter Notebook Example](http://beta.mybinder.org/v2/gh/finos/perspective/master?urlpath=lab/tree/examples/jupyter-notebooks)

[^cross_references]: [Using Quarto Cross References](https://quarto.org/docs/authoring/cross-references.html)

[^includes]: [Using Quarto Includes](https://quarto.org/docs/authoring/includes.html)